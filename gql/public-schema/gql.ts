/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  query ReferenceContent($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...ReferenceContentTemplate\n    }\n  }\n": types.ReferenceContentDocument,
    "\n  query InvestigationChildPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...InvestigationChildPageTemplate\n      ...InvestigationSectionBreakTemplate\n    }\n  }\n": types.InvestigationChildPageDocument,
    "\n  query InvestigationChildPageMetadata($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      title\n    }\n  }\n": types.InvestigationChildPageMetadataDocument,
    "\n  query InvestigationId($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      id\n    }\n  }\n": types.InvestigationIdDocument,
    "\n  query InvestigationPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...InvestigationLandingPageTemplate\n    }\n  }\n": types.InvestigationPageDocument,
    "\n  query GlobalsQuery($site: [String], $section: [String]) {\n    headerNavItems: entries(section: $section, site: $site, level: 1) {\n      id\n      title\n      uri\n      children {\n        id\n        title\n        uri\n      }\n    }\n    siteInfo: globalSet(site: $site, handle: \"siteInfo\") {\n      ... on siteInfo_GlobalSet {\n        language\n        name\n        handle\n        siteTitle\n        siteDescription\n      }\n    }\n    categories(site: $site) {\n      id\n      slug\n      groupHandle\n      title\n    }\n  }\n": types.GlobalsQueryDocument,
    "\n  query HomepageQuery($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...HomepageTemplate\n    }\n  }\n": types.HomepageQueryDocument,
    "\n  query FacebookOauthUrl {\n    facebookOauthUrl\n  }\n": types.FacebookOauthUrlDocument,
    "\n  mutation GoogleSignInStudent($idToken: String!) {\n    googleSignInStudents(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n": types.GoogleSignInStudentDocument,
    "\n  mutation GoogleSignInEducator($idToken: String!) {\n    googleSignInEducators(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n": types.GoogleSignInEducatorDocument,
    "\n  mutation ActivateUser($code: String!, $id: String!) {\n    activateUser(code: $code, id: $id)\n  }\n": types.ActivateUserDocument,
    "\n  mutation ForgottenPassword($email: String!) {\n    forgottenPassword(email: $email)\n  }\n": types.ForgottenPasswordDocument,
    "\n  mutation SetPassword($password: String!, $code: String!, $id: String!) {\n    setPassword(password: $password, code: $code, id: $id)\n  }\n": types.SetPasswordDocument,
    "\n  mutation Authenticate($email: String!, $password: String!) {\n    authenticate(email: $email, password: $password) {\n      ...AuthFragment\n    }\n  }\n": types.AuthenticateDocument,
    "\n  mutation FacebookSignInStudent($code: String!) {\n    facebookSignInStudents(code: $code) {\n      ...AuthFragment\n    }\n  }\n": types.FacebookSignInStudentDocument,
    "\n  mutation FacebookSignInEducator($code: String!) {\n    facebookSignInEducators(code: $code) {\n      ...AuthFragment\n    }\n  }\n": types.FacebookSignInEducatorDocument,
    "\n  mutation RegisterEducator(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerEducators(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n": types.RegisterEducatorDocument,
    "\n  mutation RegisterStudent(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerStudents(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n": types.RegisterStudentDocument,
    "\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      ...AuthFragment\n    }\n  }\n": types.RefreshTokenDocument,
    "\n  fragment BarGraphToolBlock on contentBlocks_barGraphTool_BlockType {\n    __typename\n    id\n    title\n    yAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    graphBars {\n      ... on graphBars_bar_BlockType {\n        __typename\n        yValue\n        label\n      }\n    }\n  }\n": types.BarGraphToolBlockFragmentDoc,
    "\n  fragment ColorFilterToolBlock on widgets_colorFilterTool_Entry {\n    title\n    filterColorOptionsLabels: filterColorOptions(label: true)\n    filterColorOptionsValues: filterColorOptions(label: true)\n    colorFilterToolObjects {\n      ... on colorFilterToolObjects_group_BlockType {\n        groupName\n        objects: children {\n          ... on colorFilterToolObjects_object_BlockType {\n            objectName\n            objectCaption\n            filterImages: children {\n              ... on colorFilterToolObjects_filterimage_BlockType {\n                isEnabled\n                isActive\n                image {\n                  url {\n                    directUrlPreview\n                  }\n                  width\n                  height\n                  additional {\n                    AltTextEN\n                    AltTextES\n                  }\n                }\n                max: colorToolMax\n                min: colorToolMin\n                defaultValue: colorToolDefaultValue\n                label: filter\n                color: preSelectedColor\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.ColorFilterToolBlockFragmentDoc,
    "\n  fragment FilterToolBlock on contentBlocks_filterTool_BlockType {\n    __typename\n    id\n    preSelectedColor\n    readOnly\n  }\n": types.FilterToolBlockFragmentDoc,
    "\n  fragment ImageBlock on contentBlocks_image_BlockType {\n    id\n    caption\n    layout\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n        preview\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n  }\n": types.ImageBlockFragmentDoc,
    "\n  fragment InteractionGroupContainerBlock on contentBlocks_group_BlockType {\n    __typename\n    childBlocks: children {\n      __typename\n      id\n      ...TextBlock\n      ...ImageBlock\n      ...TableBlock\n      ...QuestionsBlock\n      ...BarGraphToolBlock\n      ...FilterToolBlock\n      ...ScatterplotToolBlock\n      ...ReferenceModalBlock\n    }\n  }\n": types.InteractionGroupContainerBlockFragmentDoc,
    "\n  fragment ReferenceModalBlock on contentBlocks_referenceModalBlock_BlockType {\n    referenceModalEntries {\n      ... on referenceModals_default_Entry {\n        title\n        uri\n      }\n    }\n  }\n": types.ReferenceModalBlockFragmentDoc,
    "\n  fragment QuestionsBlock on contentBlocks_questionBlock_BlockType {\n    id\n    questionEntries {\n      __typename\n      id\n      ...QuestionFactory\n    }\n  }\n": types.QuestionsBlockFragmentDoc,
    "\n  fragment ScatterplotToolBlock on contentBlocks_scatterplotTool_BlockType {\n    id\n    title\n    xAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    scatterplotItems {\n      ... on scatterplotItems_item_BlockType {\n        xValue\n        yValue\n        itemLabel\n      }\n    }\n  }\n": types.ScatterplotToolBlockFragmentDoc,
    "\n  fragment TableBlock on contentBlocks_table_BlockType {\n    id\n    caption\n    contentHeading\n    displayTable {\n      ... on displayTable_BlockType {\n        tableRow {\n          ... on tableRow_tableCell_BlockType {\n            id\n            cellContent\n            rowHeader\n          }\n        }\n      }\n    }\n  }\n": types.TableBlockFragmentDoc,
    "\n  fragment TextBlock on contentBlocks_text_BlockType {\n    id\n    text\n  }\n": types.TextBlockFragmentDoc,
    "\n  fragment TwoColumnContainerBlock on contentBlocks_twoColumnContainer_BlockType {\n    columns: children {\n      ... on contentBlocks_colLeft_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n      ... on contentBlocks_colRight_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n    }\n  }\n": types.TwoColumnContainerBlockFragmentDoc,
    "\n  fragment ContentBlockFactory on contentBlocks_NeoField {\n    __typename\n    ...TwoColumnContainerBlock\n    ...InteractionGroupContainerBlock\n    ...TextBlock\n    ...ImageBlock\n    ...TableBlock\n    ...QuestionsBlock\n    ...BarGraphToolBlock\n    ...FilterToolBlock\n    ...ScatterplotToolBlock\n    ...ReferenceModalBlock\n  }\n": types.ContentBlockFactoryFragmentDoc,
    "\n  fragment QuestionFactory on questions_default_Entry {\n    answerType\n    options: answerOptions {\n      ... on answerOptions_option_BlockType {\n        label: optionLabel\n        value: optionValue\n      }\n    }\n    id\n    questionText\n    widgetInstructions\n    questionWidgetsBlock {\n      __typename\n      ... on questionWidgetsBlock_colorFilterToolBlock_BlockType {\n        typeHandle\n        colorFilterTool {\n          ...ColorFilterToolBlock\n        }\n      }\n    }\n    multiPartBlocks {\n      ... on multiPartBlocks_select_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_text_BlockType {\n        id\n        type: typeHandle\n      }\n      ... on multiPartBlocks_multiselect_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_readonlyText_BlockType {\n        id\n        type: typeHandle\n        text: questionText\n      }\n    }\n  }\n": types.QuestionFactoryFragmentDoc,
    "\n  fragment TemplateFactory on EntryInterface {\n    __typename\n    ...PageTemplate\n  }\n": types.TemplateFactoryFragmentDoc,
    "\n  fragment HomepageTemplate on homepage_homepage_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n": types.HomepageTemplateFragmentDoc,
    "\n  fragment InvestigationChildPageTemplate on investigations_default_Entry {\n    __typename\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n    hasSavePoint\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.InvestigationChildPageTemplateFragmentDoc,
    "\n  fragment InvestigationLandingPageTemplate on investigations_investigationParent_Entry {\n    title\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n    children {\n      uri\n    }\n  }\n": types.InvestigationLandingPageTemplateFragmentDoc,
    "\n  fragment InvestigationSectionBreakTemplate on investigations_investigationSectionBreakChild_Entry {\n    __typename\n    id\n    title\n    text\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n                ... on contentBlocks_twoColumnContainer_BlockType {\n                  __typename\n                  columns: children {\n                    ... on contentBlocks_colLeft_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                    ... on contentBlocks_colRight_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n": types.InvestigationSectionBreakTemplateFragmentDoc,
    "\n  fragment PageTemplate on pages_pages_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n": types.PageTemplateFragmentDoc,
    "\n  fragment ReferenceContentTemplate on referenceModals_default_Entry {\n    __typename\n    title\n    id\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n": types.ReferenceContentTemplateFragmentDoc,
    "fragment AuthFragment on Auth {\n  jwt\n  jwtExpiresAt\n  refreshToken\n  refreshTokenExpiresAt\n  user {\n    ...UserFragment\n  }\n}": types.AuthFragmentFragmentDoc,
    "fragment UserFragment on UserInterface {\n  id\n  status\n}": types.UserFragmentFragmentDoc,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query ReferenceContent($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...ReferenceContentTemplate\n    }\n  }\n"): (typeof documents)["\n  query ReferenceContent($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...ReferenceContentTemplate\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query InvestigationChildPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...InvestigationChildPageTemplate\n      ...InvestigationSectionBreakTemplate\n    }\n  }\n"): (typeof documents)["\n  query InvestigationChildPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      ...InvestigationChildPageTemplate\n      ...InvestigationSectionBreakTemplate\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query InvestigationChildPageMetadata($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      title\n    }\n  }\n"): (typeof documents)["\n  query InvestigationChildPageMetadata($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      title\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query InvestigationId($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      id\n    }\n  }\n"): (typeof documents)["\n  query InvestigationId($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      id\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query InvestigationPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...InvestigationLandingPageTemplate\n    }\n  }\n"): (typeof documents)["\n  query InvestigationPage($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...InvestigationLandingPageTemplate\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GlobalsQuery($site: [String], $section: [String]) {\n    headerNavItems: entries(section: $section, site: $site, level: 1) {\n      id\n      title\n      uri\n      children {\n        id\n        title\n        uri\n      }\n    }\n    siteInfo: globalSet(site: $site, handle: \"siteInfo\") {\n      ... on siteInfo_GlobalSet {\n        language\n        name\n        handle\n        siteTitle\n        siteDescription\n      }\n    }\n    categories(site: $site) {\n      id\n      slug\n      groupHandle\n      title\n    }\n  }\n"): (typeof documents)["\n  query GlobalsQuery($site: [String], $section: [String]) {\n    headerNavItems: entries(section: $section, site: $site, level: 1) {\n      id\n      title\n      uri\n      children {\n        id\n        title\n        uri\n      }\n    }\n    siteInfo: globalSet(site: $site, handle: \"siteInfo\") {\n      ... on siteInfo_GlobalSet {\n        language\n        name\n        handle\n        siteTitle\n        siteDescription\n      }\n    }\n    categories(site: $site) {\n      id\n      slug\n      groupHandle\n      title\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query HomepageQuery($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...HomepageTemplate\n    }\n  }\n"): (typeof documents)["\n  query HomepageQuery($site: [String], $uri: [String]) {\n    entry(site: $site, uri: $uri) {\n      __typename\n      ...HomepageTemplate\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query FacebookOauthUrl {\n    facebookOauthUrl\n  }\n"): (typeof documents)["\n  query FacebookOauthUrl {\n    facebookOauthUrl\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation GoogleSignInStudent($idToken: String!) {\n    googleSignInStudents(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation GoogleSignInStudent($idToken: String!) {\n    googleSignInStudents(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation GoogleSignInEducator($idToken: String!) {\n    googleSignInEducators(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation GoogleSignInEducator($idToken: String!) {\n    googleSignInEducators(idToken: $idToken) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation ActivateUser($code: String!, $id: String!) {\n    activateUser(code: $code, id: $id)\n  }\n"): (typeof documents)["\n  mutation ActivateUser($code: String!, $id: String!) {\n    activateUser(code: $code, id: $id)\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation ForgottenPassword($email: String!) {\n    forgottenPassword(email: $email)\n  }\n"): (typeof documents)["\n  mutation ForgottenPassword($email: String!) {\n    forgottenPassword(email: $email)\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation SetPassword($password: String!, $code: String!, $id: String!) {\n    setPassword(password: $password, code: $code, id: $id)\n  }\n"): (typeof documents)["\n  mutation SetPassword($password: String!, $code: String!, $id: String!) {\n    setPassword(password: $password, code: $code, id: $id)\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation Authenticate($email: String!, $password: String!) {\n    authenticate(email: $email, password: $password) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation Authenticate($email: String!, $password: String!) {\n    authenticate(email: $email, password: $password) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation FacebookSignInStudent($code: String!) {\n    facebookSignInStudents(code: $code) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation FacebookSignInStudent($code: String!) {\n    facebookSignInStudents(code: $code) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation FacebookSignInEducator($code: String!) {\n    facebookSignInEducators(code: $code) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation FacebookSignInEducator($code: String!) {\n    facebookSignInEducators(code: $code) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation RegisterEducator(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerEducators(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation RegisterEducator(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerEducators(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation RegisterStudent(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerStudents(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation RegisterStudent(\n    $email: String!\n    $password: String!\n    $fullName: String\n  ) {\n    registerStudents(email: $email, password: $password, fullName: $fullName) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      ...AuthFragment\n    }\n  }\n"): (typeof documents)["\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      ...AuthFragment\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment BarGraphToolBlock on contentBlocks_barGraphTool_BlockType {\n    __typename\n    id\n    title\n    yAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    graphBars {\n      ... on graphBars_bar_BlockType {\n        __typename\n        yValue\n        label\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment BarGraphToolBlock on contentBlocks_barGraphTool_BlockType {\n    __typename\n    id\n    title\n    yAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    graphBars {\n      ... on graphBars_bar_BlockType {\n        __typename\n        yValue\n        label\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ColorFilterToolBlock on widgets_colorFilterTool_Entry {\n    title\n    filterColorOptionsLabels: filterColorOptions(label: true)\n    filterColorOptionsValues: filterColorOptions(label: true)\n    colorFilterToolObjects {\n      ... on colorFilterToolObjects_group_BlockType {\n        groupName\n        objects: children {\n          ... on colorFilterToolObjects_object_BlockType {\n            objectName\n            objectCaption\n            filterImages: children {\n              ... on colorFilterToolObjects_filterimage_BlockType {\n                isEnabled\n                isActive\n                image {\n                  url {\n                    directUrlPreview\n                  }\n                  width\n                  height\n                  additional {\n                    AltTextEN\n                    AltTextES\n                  }\n                }\n                max: colorToolMax\n                min: colorToolMin\n                defaultValue: colorToolDefaultValue\n                label: filter\n                color: preSelectedColor\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment ColorFilterToolBlock on widgets_colorFilterTool_Entry {\n    title\n    filterColorOptionsLabels: filterColorOptions(label: true)\n    filterColorOptionsValues: filterColorOptions(label: true)\n    colorFilterToolObjects {\n      ... on colorFilterToolObjects_group_BlockType {\n        groupName\n        objects: children {\n          ... on colorFilterToolObjects_object_BlockType {\n            objectName\n            objectCaption\n            filterImages: children {\n              ... on colorFilterToolObjects_filterimage_BlockType {\n                isEnabled\n                isActive\n                image {\n                  url {\n                    directUrlPreview\n                  }\n                  width\n                  height\n                  additional {\n                    AltTextEN\n                    AltTextES\n                  }\n                }\n                max: colorToolMax\n                min: colorToolMin\n                defaultValue: colorToolDefaultValue\n                label: filter\n                color: preSelectedColor\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment FilterToolBlock on contentBlocks_filterTool_BlockType {\n    __typename\n    id\n    preSelectedColor\n    readOnly\n  }\n"): (typeof documents)["\n  fragment FilterToolBlock on contentBlocks_filterTool_BlockType {\n    __typename\n    id\n    preSelectedColor\n    readOnly\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ImageBlock on contentBlocks_image_BlockType {\n    id\n    caption\n    layout\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n        preview\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment ImageBlock on contentBlocks_image_BlockType {\n    id\n    caption\n    layout\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n        preview\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment InteractionGroupContainerBlock on contentBlocks_group_BlockType {\n    __typename\n    childBlocks: children {\n      __typename\n      id\n      ...TextBlock\n      ...ImageBlock\n      ...TableBlock\n      ...QuestionsBlock\n      ...BarGraphToolBlock\n      ...FilterToolBlock\n      ...ScatterplotToolBlock\n      ...ReferenceModalBlock\n    }\n  }\n"): (typeof documents)["\n  fragment InteractionGroupContainerBlock on contentBlocks_group_BlockType {\n    __typename\n    childBlocks: children {\n      __typename\n      id\n      ...TextBlock\n      ...ImageBlock\n      ...TableBlock\n      ...QuestionsBlock\n      ...BarGraphToolBlock\n      ...FilterToolBlock\n      ...ScatterplotToolBlock\n      ...ReferenceModalBlock\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ReferenceModalBlock on contentBlocks_referenceModalBlock_BlockType {\n    referenceModalEntries {\n      ... on referenceModals_default_Entry {\n        title\n        uri\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment ReferenceModalBlock on contentBlocks_referenceModalBlock_BlockType {\n    referenceModalEntries {\n      ... on referenceModals_default_Entry {\n        title\n        uri\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment QuestionsBlock on contentBlocks_questionBlock_BlockType {\n    id\n    questionEntries {\n      __typename\n      id\n      ...QuestionFactory\n    }\n  }\n"): (typeof documents)["\n  fragment QuestionsBlock on contentBlocks_questionBlock_BlockType {\n    id\n    questionEntries {\n      __typename\n      id\n      ...QuestionFactory\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ScatterplotToolBlock on contentBlocks_scatterplotTool_BlockType {\n    id\n    title\n    xAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    scatterplotItems {\n      ... on scatterplotItems_item_BlockType {\n        xValue\n        yValue\n        itemLabel\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment ScatterplotToolBlock on contentBlocks_scatterplotTool_BlockType {\n    id\n    title\n    xAxisMin\n    yAxisMax\n    yAxisLabel\n    xAxisLabel\n    scatterplotItems {\n      ... on scatterplotItems_item_BlockType {\n        xValue\n        yValue\n        itemLabel\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment TableBlock on contentBlocks_table_BlockType {\n    id\n    caption\n    contentHeading\n    displayTable {\n      ... on displayTable_BlockType {\n        tableRow {\n          ... on tableRow_tableCell_BlockType {\n            id\n            cellContent\n            rowHeader\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment TableBlock on contentBlocks_table_BlockType {\n    id\n    caption\n    contentHeading\n    displayTable {\n      ... on displayTable_BlockType {\n        tableRow {\n          ... on tableRow_tableCell_BlockType {\n            id\n            cellContent\n            rowHeader\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment TextBlock on contentBlocks_text_BlockType {\n    id\n    text\n  }\n"): (typeof documents)["\n  fragment TextBlock on contentBlocks_text_BlockType {\n    id\n    text\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment TwoColumnContainerBlock on contentBlocks_twoColumnContainer_BlockType {\n    columns: children {\n      ... on contentBlocks_colLeft_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n      ... on contentBlocks_colRight_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment TwoColumnContainerBlock on contentBlocks_twoColumnContainer_BlockType {\n    columns: children {\n      ... on contentBlocks_colLeft_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n      ... on contentBlocks_colRight_BlockType {\n        __typename\n        id\n        childblocks: children {\n          __typename\n          id\n          ...TextBlock\n          ...ImageBlock\n          ...TableBlock\n          ...QuestionsBlock\n          ...BarGraphToolBlock\n          ...FilterToolBlock\n          ...ScatterplotToolBlock\n          ...ReferenceModalBlock\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ContentBlockFactory on contentBlocks_NeoField {\n    __typename\n    ...TwoColumnContainerBlock\n    ...InteractionGroupContainerBlock\n    ...TextBlock\n    ...ImageBlock\n    ...TableBlock\n    ...QuestionsBlock\n    ...BarGraphToolBlock\n    ...FilterToolBlock\n    ...ScatterplotToolBlock\n    ...ReferenceModalBlock\n  }\n"): (typeof documents)["\n  fragment ContentBlockFactory on contentBlocks_NeoField {\n    __typename\n    ...TwoColumnContainerBlock\n    ...InteractionGroupContainerBlock\n    ...TextBlock\n    ...ImageBlock\n    ...TableBlock\n    ...QuestionsBlock\n    ...BarGraphToolBlock\n    ...FilterToolBlock\n    ...ScatterplotToolBlock\n    ...ReferenceModalBlock\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment QuestionFactory on questions_default_Entry {\n    answerType\n    options: answerOptions {\n      ... on answerOptions_option_BlockType {\n        label: optionLabel\n        value: optionValue\n      }\n    }\n    id\n    questionText\n    widgetInstructions\n    questionWidgetsBlock {\n      __typename\n      ... on questionWidgetsBlock_colorFilterToolBlock_BlockType {\n        typeHandle\n        colorFilterTool {\n          ...ColorFilterToolBlock\n        }\n      }\n    }\n    multiPartBlocks {\n      ... on multiPartBlocks_select_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_text_BlockType {\n        id\n        type: typeHandle\n      }\n      ... on multiPartBlocks_multiselect_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_readonlyText_BlockType {\n        id\n        type: typeHandle\n        text: questionText\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment QuestionFactory on questions_default_Entry {\n    answerType\n    options: answerOptions {\n      ... on answerOptions_option_BlockType {\n        label: optionLabel\n        value: optionValue\n      }\n    }\n    id\n    questionText\n    widgetInstructions\n    questionWidgetsBlock {\n      __typename\n      ... on questionWidgetsBlock_colorFilterToolBlock_BlockType {\n        typeHandle\n        colorFilterTool {\n          ...ColorFilterToolBlock\n        }\n      }\n    }\n    multiPartBlocks {\n      ... on multiPartBlocks_select_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_text_BlockType {\n        id\n        type: typeHandle\n      }\n      ... on multiPartBlocks_multiselect_BlockType {\n        id\n        type: typeHandle\n        options: answerOptions {\n          ... on answerOptions_option_BlockType {\n            id\n            label: optionLabel\n            value: optionValue\n          }\n        }\n      }\n      ... on multiPartBlocks_readonlyText_BlockType {\n        id\n        type: typeHandle\n        text: questionText\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment TemplateFactory on EntryInterface {\n    __typename\n    ...PageTemplate\n  }\n"): (typeof documents)["\n  fragment TemplateFactory on EntryInterface {\n    __typename\n    ...PageTemplate\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment HomepageTemplate on homepage_homepage_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"): (typeof documents)["\n  fragment HomepageTemplate on homepage_homepage_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment InvestigationChildPageTemplate on investigations_default_Entry {\n    __typename\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n    hasSavePoint\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment InvestigationChildPageTemplate on investigations_default_Entry {\n    __typename\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n    hasSavePoint\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                    ... on contentBlocks_group_BlockType {\n                      __typename\n                      group: children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment InvestigationLandingPageTemplate on investigations_investigationParent_Entry {\n    title\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n    children {\n      uri\n    }\n  }\n"): (typeof documents)["\n  fragment InvestigationLandingPageTemplate on investigations_investigationParent_Entry {\n    title\n    image {\n      url {\n        directUrlPreview\n        directUrlOriginal\n        PNG\n        HighJPG\n        LowJPG\n      }\n      width\n      height\n      metadata: additional {\n        AltTextEN\n        AltTextES\n        CaptionEN\n        CaptionES\n        Credit\n      }\n    }\n    children {\n      uri\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment InvestigationSectionBreakTemplate on investigations_investigationSectionBreakChild_Entry {\n    __typename\n    id\n    title\n    text\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n                ... on contentBlocks_twoColumnContainer_BlockType {\n                  __typename\n                  columns: children {\n                    ... on contentBlocks_colLeft_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                    ... on contentBlocks_colRight_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  fragment InvestigationSectionBreakTemplate on investigations_investigationSectionBreakChild_Entry {\n    __typename\n    id\n    title\n    text\n    prev(section: \"investigations\") {\n      __typename\n      uri\n    }\n    next(section: \"investigations\") {\n      __typename\n      uri\n    }\n    parent {\n      id\n      children(section: \"investigations\", type: \"default\") {\n        ... on investigations_investigationSectionBreakChild_Entry {\n          __typename\n          id\n          title\n          uri\n        }\n        ... on investigations_default_Entry {\n          __typename\n          id\n          title\n          hasSavePoint\n          uri\n          contentBlocks {\n            ... on contentBlocks_questionBlock_BlockType {\n              __typename\n              questionEntries {\n                ... on questions_default_Entry {\n                  id\n                }\n              }\n            }\n            ... on contentBlocks_twoColumnContainer_BlockType {\n              __typename\n              columns: children {\n                ... on contentBlocks_colLeft_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n                ... on contentBlocks_colRight_BlockType {\n                  __typename\n                  children {\n                    ... on contentBlocks_questionBlock_BlockType {\n                      __typename\n                      questionEntries {\n                        ... on questions_default_Entry {\n                          id\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on contentBlocks_group_BlockType {\n              __typename\n              group: children {\n                ... on contentBlocks_questionBlock_BlockType {\n                  __typename\n                  questionEntries {\n                    ... on questions_default_Entry {\n                      id\n                    }\n                  }\n                }\n                ... on contentBlocks_twoColumnContainer_BlockType {\n                  __typename\n                  columns: children {\n                    ... on contentBlocks_colLeft_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                    ... on contentBlocks_colRight_BlockType {\n                      __typename\n                      children {\n                        ... on contentBlocks_questionBlock_BlockType {\n                          __typename\n                          questionEntries {\n                            ... on questions_default_Entry {\n                              id\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment PageTemplate on pages_pages_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"): (typeof documents)["\n  fragment PageTemplate on pages_pages_Entry {\n    id\n    title\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  fragment ReferenceContentTemplate on referenceModals_default_Entry {\n    __typename\n    title\n    id\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"): (typeof documents)["\n  fragment ReferenceContentTemplate on referenceModals_default_Entry {\n    __typename\n    title\n    id\n    contentBlocks {\n      ...ContentBlockFactory\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "fragment AuthFragment on Auth {\n  jwt\n  jwtExpiresAt\n  refreshToken\n  refreshTokenExpiresAt\n  user {\n    ...UserFragment\n  }\n}"): (typeof documents)["fragment AuthFragment on Auth {\n  jwt\n  jwtExpiresAt\n  refreshToken\n  refreshTokenExpiresAt\n  user {\n    ...UserFragment\n  }\n}"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "fragment UserFragment on UserInterface {\n  id\n  status\n}"): (typeof documents)["fragment UserFragment on UserInterface {\n  id\n  status\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;